/**
 * 给定一个数组，它的第 i 个元素是一支给定股票 第 i 天的价格
 * 如果最多允许完成一笔交易（即买入和卖出一支股票一次），设计一个算法来计算所能获取的最大利润
 * 注意：不能在买入股票前卖出股票
 * 
 * eg1：
 *  输入: [7,1,5,3,6,4]
 *  输出: 5
 *  解释: 在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。
 *       注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。
 * 
 * eg2：
 *  输入: [7,6,4,3,1]
 *  输出: 0
 *  解释: 在这种情况下, 没有交易完成, 所以最大利润为 0。
 * 
 */

/**
 * 时间复杂度：O(n)
 * 空间复杂度：O(1)
 */
var f = function (nums) {
    let max = 0
    let minprice = nums[0]
    for (let i = 0; i < nums.length; i++) {
        minprice = Math.min(nums[i], minprice)
        max = Math.max(max, nums[i] - minprice)
    }
    return max
}
